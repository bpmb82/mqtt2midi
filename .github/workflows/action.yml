name: Build

on:
    push:
      tags:
        - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.runner }}
 
    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ${{ github.event.repository.name }}-linux-amd64.tar.gz
            asset_extension: ""
            compression_type: tar
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: ${{ github.event.repository.name }}-windows-amd64.zip
            asset_extension: ".exe"
            compression_type: zip
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
            artifact_name: ${{ github.event.repository.name }}-macos-amd64.tar.gz
            asset_extension: ""
            compression_type: tar
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin
            artifact_name: ${{ github.event.repository.name }}-macos-aarch64.tar.gz
            asset_extension: ""
            compression_type: tar
 
    steps:

      - name: Get tag
        id: tag
        uses: devops-actions/action-get-tag@v1.0.3

      - name: Install dependencies if target is Linux x86_64
        shell: bash
        run: |
          sudo apt update && sudo apt install -y gcc curl libasound2-dev libasound2 openssl pkg-config
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}

      - name: Checkout
        uses: actions/checkout@v3
 
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "${{ matrix.target }}"
 
      - name: Setup Cache
        uses: Swatinem/rust-cache@v2
 
      - name: Build Binary
        run: cargo build --verbose --release --target ${{ matrix.target }}

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.6
        with:
          type: ${{ matrix.compression_type }}
          directory: target/${{ matrix.target }}/release/
          path: ${{ github.event.repository.name }}${{ matrix.asset_extension }}
          filename: '${{ matrix.artifact_name }}'

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ steps.tag.outputs.tag }}
          artifacts: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          bodyFile: "CHANGELOG.md"
      